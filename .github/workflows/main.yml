name: YouTube Multi-Cut (Safe H264)

on:
  workflow_dispatch:
    inputs:
      url:
        description: "URL YouTube"
        required: true
      segments:
        description: "Segmen waktu (contoh: 01:14:00-01:14:23 02:00:00-02:00:25)"
        required: true
      resolution:
        description: "Resolusi maksimal"
        required: true
        type: choice
        options: [ "720", "1080", "1440", "2160" ]
        default: "1080"
      fps:
        description: "FPS target"
        required: true
        type: choice
        options: [ "original", "24", "30", "60", "120" ]
        default: "original"
      bitrate:
        description: "Bitrate video"
        required: true
        type: choice
        options: [ "auto", "5M", "10M", "20M" ]
        default: "auto"

jobs:
  cut:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install tools
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq
          python -m pip install --upgrade pip
          pip install yt-dlp

      - name: Buat cookies dari Secret (opsional)
        if: ${{ secrets.YT_COOKIES != '' }}
        shell: bash
        run: |
          set -euo pipefail
          printf "%s" "${{ secrets.YT_COOKIES }}" > cookies.txt

      - name: Potong video langsung dari YouTube
        shell: bash
        run: |
          set -euo pipefail

          # Ambil input
          URL="${{ github.event.inputs.url }}"
          SEGMENTS="${{ github.event.inputs.segments }}"
          RES="${{ github.event.inputs.resolution }}"
          FPS="${{ github.event.inputs.fps }}"
          BR="${{ github.event.inputs.bitrate }}"

          # Bangun argumen post-processor ffmpeg untuk Video (fps/bitrate)
          POST_ARGS_VIDEO=""
          if [ "$FPS" != "original" ]; then
            POST_ARGS_VIDEO="${POST_ARGS_VIDEO} -r $FPS"
          fi
          if [ "$BR" != "auto" ]; then
            POST_ARGS_VIDEO="${POST_ARGS_VIDEO} -b:v $BR"
          fi

          if [ -n "$POST_ARGS_VIDEO" ]; then
            PP_ARGS=( --postprocessor-args "Video:${POST_ARGS_VIDEO}" )
          else
            PP_ARGS=()
          fi

          COOKIE_ARGS=()
          if [ -f cookies.txt ]; then
            COOKIE_ARGS=( --cookies cookies.txt )
          fi

          i=1
          for SEG in $SEGMENTS; do
            echo "ðŸŽ¬ Potong segmen $SEG ..."

            yt-dlp \
              "${COOKIE_ARGS[@]}" \
              -f "bv*[vcodec^=avc1][height<=${RES}]+ba/b[height<=${RES}]" \
              --download-sections "*${SEG}" \
              --remux-video mp4 \
              -o "clip${i}.%(ext)s" \
              "${PP_ARGS[@]}" \
              "$URL"

            OUTFILE="clip${i}.mp4"
            if [ ! -f "$OUTFILE" ]; then
              # Jika masih bukan MP4, convert manual
              CAND=$(ls -1 clip${i}.* 2>/dev/null | head -n1 || true)
              if [ -n "$CAND" ] && [ "$CAND" != "$OUTFILE" ]; then
                echo "âš¡ Convert $CAND -> $OUTFILE (H.264 + AAC)"
                ffmpeg -y -i "$CAND" \
                  -c:v libx264 -preset fast -crf 18 \
                  $( [ "$FPS" != "original" ] && printf -- "-r %s" "$FPS" ) \
                  $( [ "$BR" != "auto" ] && printf -- "-b:v %s" "$BR" ) \
                  -c:a aac -b:a 192k \
                  "$OUTFILE"
                rm -f "$CAND"
              fi
            fi

            i=$((i+1))
          done

      - name: Upload hasil
        uses: actions/upload-artifact@v4
        with:
          name: youtube-multi-cut
          path: "*.mp4"

      - name: Bersihkan file lama
        shell: bash
        run: |
          rm -f cookies.txt clip*.webm clip*.mkv clip*.m4a clip*.mp3 source.* || true
